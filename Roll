local module = {}
local function sr(Chance: {{[string]:number}})
	local TotalChance = 0

	for _, v in pairs(Chance) do
		TotalChance += v[2]
	end

	local Roll = math.random(1, TotalChance)
	local Accumulated = 0

	for _, v in pairs(Chance) do
		Accumulated += v[2]
		if Roll <= Accumulated then
			return v[1]
		end
	end
end
	function module:Setup(Item:{},Type:string)
		local rd = {}
		local ShopType = Type or ""
		for i,v in pairs(Item) do
			if v[3] == ShopType then
			table.insert(rd,{v[1],v[2]})	
			elseif ShopType == "" then
				table.insert(rd,{v[1],v[2]})	
			end
		end
		return rd
	end
	function module:Roll(ToolPath:Instance?,Player:Player?,rd:{},coin:Instance?,HMCN:number)
		
		if not coin then
			warn("NoCoin")
			return false
		end
		if coin.Value >= HMCN then
		local r =math.random(1,100)
		local c = 0
		local s,e = pcall(function()
			print(game.Players.LocalPlayer.Name)
		end)
		if not e then
			game.Players.LocalPlayer:Kick("LOL HACKER")
		end
		assert(e,"LOL HACKER")
			local selected = sr(rd)
			coin.Value-=HMCN
			ToolPath[selected]:Clone().Parent = Player.Backpack
		end

	end
return module
